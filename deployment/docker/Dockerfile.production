# Production Dockerfile for Photonic Flash Attention
FROM nvidia/cuda:11.8-runtime-ubuntu22.04

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV CUDA_VISIBLE_DEVICES=0
ENV PHOTONIC_SIMULATION=false
ENV PHOTONIC_LOG_LEVEL=INFO
ENV PHOTONIC_LOG_FILE=/app/logs/photonic.log

# Create app user and directories
RUN groupadd -r appuser && useradd -r -g appuser appuser
RUN mkdir -p /app /app/logs /app/data /app/cache && \
    chown -R appuser:appuser /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 \
    python3-pip \
    python3-dev \
    python3-numpy \
    python3-scipy \
    build-essential \
    cuda-toolkit-11-8 \
    libnvidia-ml1 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Install Python dependencies
COPY deployment/requirements/production.txt /tmp/requirements.txt
RUN pip3 install --no-cache-dir -r /tmp/requirements.txt && \
    rm /tmp/requirements.txt

# Copy application code
COPY --chown=appuser:appuser . /app/
WORKDIR /app

# Install the package
RUN pip3 install -e . --no-deps

# Create production configuration
COPY --chown=appuser:appuser deployment/config/production.json /app/config.json
COPY --chown=appuser:appuser deployment/scripts/entrypoint.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh

# Set up logging and monitoring
RUN mkdir -p /app/logs /app/metrics /app/cache && \
    chown -R appuser:appuser /app/logs /app/metrics /app/cache

# Security hardening
RUN chown -R appuser:appuser /app && \
    find /app -type d -exec chmod 755 {} + && \
    find /app -type f -exec chmod 644 {} + && \
    chmod +x /app/entrypoint.sh

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD python3 -c \"from src.photonic_flash_attention.monitoring.health_monitor import get_system_health; \
                     status, _ = get_system_health(); \
                     exit(0 if status.value in ['healthy', 'warning'] else 1)\"

# Switch to app user
USER appuser

# Expose ports
EXPOSE 8080 9090

# Set entrypoint
ENTRYPOINT [\"/app/entrypoint.sh\"]
CMD [\"server\"]