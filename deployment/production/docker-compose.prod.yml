version: '3.8'

services:
  photonic-flash-attention:
    build:
      context: ../..
      dockerfile: deployment/production/Dockerfile.prod
      args:
        - BUILDKIT_INLINE_CACHE=1
    image: photonic-flash-attention:production
    container_name: photonic-attention-prod
    restart: unless-stopped
    
    # Resource limits for production
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 8G
        reservations:
          cpus: '2.0'
          memory: 4G
    
    # Environment configuration
    environment:
      - NODE_ENV=production
      - PHOTONIC_MODE=production
      - LOG_LEVEL=INFO
      - ENABLE_TELEMETRY=true
      - ENABLE_SECURITY_VALIDATION=true
      - THERMAL_MONITORING=true
      - ENERGY_OPTIMIZATION=true
      - CARBON_TRACKING=true
      - CUDA_VISIBLE_DEVICES=0
      - OMP_NUM_THREADS=4
      - PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512
    
    # Security context
    security_opt:
      - no-new-privileges:true
    user: "1000:1000"
    read_only: true
    
    # Volumes
    volumes:
      - photonic-data:/app/data
      - photonic-logs:/app/logs
      - photonic-models:/app/models
      - photonic-cache:/tmp/photonic-cache
      - /sys/class/thermal:/sys/class/thermal:ro  # Thermal monitoring
    
    # Temporary filesystems for security
    tmpfs:
      - /tmp:noexec,nosuid,size=1G
      - /var/tmp:noexec,nosuid,size=100M
    
    # Health checks
    healthcheck:
      test: ["CMD", "python3", "-c", "import photonic_flash_attention; print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Network configuration
    networks:
      - photonic-network
    
    # Ports (if needed for monitoring)
    ports:
      - "127.0.0.1:8080:8080"  # Monitoring endpoint
    
    # Labels for orchestration
    labels:
      - "app=photonic-flash-attention"
      - "version=1.0.0"
      - "environment=production"
      - "tier=compute"

  # Monitoring and observability
  photonic-monitor:
    image: prom/prometheus:latest
    container_name: photonic-monitor
    restart: unless-stopped
    
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    
    networks:
      - photonic-network
    
    ports:
      - "127.0.0.1:9090:9090"

  # Log aggregation
  photonic-logs:
    image: grafana/loki:latest
    container_name: photonic-logs
    restart: unless-stopped
    
    volumes:
      - ./monitoring/loki.yml:/etc/loki/loki.yml:ro
      - loki-data:/loki
    
    command: -config.file=/etc/loki/loki.yml
    
    networks:
      - photonic-network
    
    ports:
      - "127.0.0.1:3100:3100"

  # Dashboard
  photonic-dashboard:
    image: grafana/grafana:latest
    container_name: photonic-dashboard
    restart: unless-stopped
    
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123  # Change in production
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    
    networks:
      - photonic-network
    
    ports:
      - "127.0.0.1:3000:3000"

  # Redis for caching and coordination
  photonic-redis:
    image: redis:7-alpine
    container_name: photonic-redis
    restart: unless-stopped
    
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru
    
    volumes:
      - redis-data:/data
    
    networks:
      - photonic-network
    
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

# Network configuration
networks:
  photonic-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Persistent volumes
volumes:
  photonic-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/photonic/data
  
  photonic-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/photonic/logs
  
  photonic-models:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/photonic/models
  
  photonic-cache:
    driver: local
  
  prometheus-data:
    driver: local
  
  loki-data:
    driver: local
  
  grafana-data:
    driver: local
  
  redis-data:
    driver: local